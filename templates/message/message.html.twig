{% extends 'base.html.twig' %}

{% block title %}Messages{% endblock %}

{% block body %}
    <div class="grid-container">
        <div class="panel-heading">
            <div>
                <h4 class="text-center">Messages</h4>
            </div>
            <div class="callout">
                <div class="grid-x">
                    <div class="cell small-12 medium-5 large-4 msg-section">
                        <div class="newmessage">
                            <button data-open="messageModal" onclick="composeMessage()"; class="button success"><i class="fas fa-pen"></i> Compose Message</button>
                        </div>
                        <input type="search" id="myInput" onkeyup="searchMessages()" placeholder="Search conversation" title="Type in a name">
                        <div id="tabs">
                            <ul>
                                <li>
                                    <a class="tablinks" href="#inbox"><i class="fas fa-inbox fa-fw"></i>Inbox</a>
                                </li>
                                <li>
                                    <a class="tablinks" href="#archive"><i class="fas fa-archive fa-fw"></i>Archive</a>
                                </li>
                            </ul>

                            <div id="inbox" class="tabcontent">
                                <ul id="myUL">
                                </ul>
                            </div>

                            <div id="archive" class="tabcontent">
                                <ul id="myUL">
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="cell small-12 medium-7 large-8 msg-section">
                        <div id="messagepanel" class="grid-y">
                            <div id="messagearea" class="cell small-12 medium-10">
                                Select an item from the list.
                            </div>
                            <div id="replyarea" class="cell small-12 medium-2">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="reveal large" id="messageModal" data-reveal data-animation-in="slide-in-down" data-animation-out="slide-out-up">
        <div id="messageForm">
        </div>
        <button class="close-button" data-close aria-label="Close" type="button">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>

    <div class="reveal" id="archiveModal" data-reveal data-animation-in="slide-in-down" data-animation-out="slide-out-up">
        <h3 class="text-center">Archive Message</h3>
        <p>Are you sure you want to send your copy of this message to the archive?</p>
        <button class="button" id="archive" data-msg-id data-close><i class="fas fa-check"></i> Yes</button>
        <button class="button alert float-right" data-close><i class="fas fa-times"></i> No</button>
        <button class="close-button" data-close aria-label="Close" type="button">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>

    <div class="reveal" id="deleteModal" data-reveal data-animation-in="slide-in-down" data-animation-out="slide-out-up">
        <h3 class="text-center">Delete Message</h3>
        <p>Are you sure you want to delete your copy of this message?</p>
        <button class="button" id="delete" data-msg-id data-close><i class="fas fa-check"></i> Yes</button>
        <button class="button alert float-right" data-close><i class="fas fa-times"></i> No</button>
        <button class="close-button" data-close aria-label="Close" type="button">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        /**
         * Perform initializations when page is ready
         */
        $(window).ready(function(){
            initMessageSubmission();
        });

        /**
         * Initializes events performed by tabs
         */
        $("#tabs").tabs({
            create: function( event, ui ) {
                getInbox();
            },
            activate: function( event, ui ) {
                resetMsgList();
                $("#messagearea").html("Select an item from the list.");
                $("#reply").html("");
                $("#replyarea").html("");
            }
        });

        $('#inbox').on('click','#messageBtn', function (event) {
            getMessage($(event.currentTarget).data('msgId'));
            replyToMessage($(event.currentTarget).data('msgId'));
            getSelectedItem(this);
        });
        $('#archive').on('click','#messageBtn', function (event) {
            getMessage($(event.currentTarget).data('msgId'));
            getSelectedItem(this);
        });

        /**
         * Resets the message list.
         */
        function resetMsgList() {
            var active = $("#tabs .ui-tabs-panel:visible").attr('id');
            if(active === "inbox") {
                getInbox();
            }else if(active === "archive") {
                getArchivedItems();
            }
        }

        /**
         * Retrieves messages from user's inbox, and populates the message list with the results.
         */
        function getInbox() {
            $.ajax({
                url:            "{{ path('inbox') }}",
                type:           "GET",
            })
            .done(function(data, status) {
                $("#inbox #myUL").empty();
                $("#inbox #myUL").html(data);
            })
            .fail(function(xhr, textStatus, errorThrown) {
                console.log('Failed to retrieve messages');
            });
        }

        function getArchivedItems() {
            $.ajax({
                url:            "{{ path('displayarchive') }}",
                type:           "GET",
            })
            .done(function(data, status) {
                $("#archive #myUL").empty();
                $("#archive #myUL").html(data);
            })
            .fail(function(xhr, textStatus, errorThrown) {
                console.log('Failed to retrieve messages');
            });
        }

        /**
         * Retrieves the selected message.
         */
        function getMessage(id) {
            $.ajax({
                url: `{{ path('message_show', {'messageId': 'msgId'}) }}`.replace('msgId', id),
                type: 'POST',
                contentType: "application/json",
            })
            .done(function(data, status) {
                $("#messagearea").html(data);
                $('#messagearea').animate({ scrollTop: 9999 }, 2500);
                $('#replies').on('click', '.deletereply', function (event) {
                    deleteReply($(event.currentTarget).data('replyId'));
                    $(this).closest('li').fadeOut('slow');
                })
            })
            .fail(function(xhr, textStatus, errorThrown) {
                console.log(`Failed to retrieve the message`);
            });
        }

        /**
         * Adds a blue border on the selected message.
         */
        function getSelectedItem(btn) {
            var current = $(".messageBtn--selected");
            if(current.length !== 0) {
                current[0].className = current[0].className.replace(" messageBtn--selected", "");
            }
            btn.className += " messageBtn--selected";
        }

        /**
         * Removes the unread message indicator.
         */
        function changeReadStatus(btn) {
            if(btn.className.includes(" messageBtn--unread")) {
                btn.className = btn.className.replace(" messageBtn--unread", "");
            }
        }

        /**
         * Deletes a message based on ID.
         */
        function deleteMessage (id) {
            $.ajax({
                url: `{{ path('message_delete', {'messageId': 'msgId'}) }}`.replace('msgId', id),
                type: 'DELETE',
            })
            .done(function(data, status) {
                console.log(`Deleted ${id}`);
                resetMsgList();
                $("#messagearea").html("Select an item from the list.");
            })
            .fail(function(xhr, textStatus, errorThrown) {
                console.log(`Failed to delete ${id}`);
            });
        }

        function deleteReply(id) {
            $.ajax({
                url: `{{ path('reply_delete', {'replyId': 'msgId'}) }}`.replace('msgId', id),
                type: 'POST',
            })
            .done(function(data, status) {
                console.log(`Deleted ${id}`);
            })
            .fail(function(xhr, textStatus, errorThrown) {
                console.log(`Failed to delete ${id}`);
            });
        }

        /**
         * Archives a message, or return the message from the archive if it is archived.
         */
        function sendToArchive(id) {
            $.ajax({
                url: `{{ path('message_archive', {'messageId': 'msgId'}) }}`.replace('msgId', id),
                type: 'POST',
            })
            .done(function(data, status){
                console.log(`Archived/recovered ${id}`);
                resetMsgList();
                $("#messagearea").html("Select an item from the list.");
            })
            .fail(function(xhr, textStatus, errorThrown){
                console.log(`Failed to archive/recover ${id}`);
            });
        }

        /**
         * Displays a modal to compose a new message.
         */
        function composeMessage() {
            $.ajax({
                url: `{{ path('message_new') }}`,
                type: 'POST',
            })
            .done(function(data, status) {
                $("#messageForm").html(data);
            })
            .fail(function(xhr, textStatus, errorThrown) {
                console.log(errorThrown);
            });
        }

        /**
         * Displays a modal to reply to a message.
         */
        function replyToMessage(id) {
            $.ajax({
                url: `{{ path('message_reply', {'messageId': 'msgId'}) }}`.replace('msgId', id),
                type: 'POST',
            })
            .done(function(data, status) {
                $("#replyarea").html(data);
                $('.replyForm').on('submit', function(event) {
                    event.preventDefault();
                    console.log('submitting!');
                    var $form = $(event.currentTarget);
                    $.ajax({
                        url: $form.attr('action'),
                        method: 'POST',
                        data: $form.serialize()
                    })
                    .done(function(data, status) {
                        $('#replies').append(data.newMsg);
                        $('#messagearea').animate({ scrollTop: 9999 }, 2500);
                        $('#reply_replyBody').val('');
                    });
                })
            })
            .fail(function(xhr, textStatus, errorThrown) {
                console.log(errorThrown);
            });
        }

        /**
         * Initializes the message form's modal.
         */
        function initMessageSubmission(){
            $('#messageForm').on('submit', '.msgForm', function(event) {
                event.preventDefault();

                $.ajax({
                    type:$(this).attr('method'),
                    url:$(this).attr('action'),
                    data:$(this).serialize(),
                })
                .done(function(data, status) {
                    if (typeof data.message !== 'undefined') {
                        console.log(data.message);
                        $('#messageModal').foundation('close');
                    }
                })
                .fail(function(xhr, textStatus, errorThrown) {
                    if (typeof xhr.responseJSON !== 'undefined') {
                        if (xhr.responseJSON.hasOwnProperty('form')) {
                            console.log(xhr.responseJSON);
                            $('#messageForm').html(xhr.responseJSON.form);
                        }
                    } else {
                        console.log(errorThrown);
                    }
                })
            });
        }

        function searchMessages() {
            var input, filter, ul, li, a, i;
            input = document.getElementById("myInput");
            filter = input.value.toUpperCase();
            ul = document.getElementById("myUL");
            li = ul.getElementsByTagName("li");
            for (i = 0; i < li.length; i++) {
                a = li[i].getElementsByTagName("a")[0];
                if (a.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    li[i].style.display = "";
                } else {
                    li[i].style.display = "none";
                }
            }
        }

        /**
         * Displays the message deletion modal.
         */
        $('#deleteModal').on('click', '#delete', function(event) {
            msgId = $(event.currentTarget).data('msg-id');
            deleteMessage(msgId);
        })

        $('#archiveModal').on('click', '#archive', function(event) {
            msgId = $(event.currentTarget).data('msg-id');
            sendToArchive(msgId);
        })
    </script>
{% endblock %}
